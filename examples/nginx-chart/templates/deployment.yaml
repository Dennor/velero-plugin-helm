apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "nginx.fullname" . }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ template "nginx.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations:
        {{- if .Values.fsfreeze.image }}
        pre.hook.backup.velero.io/container: {{ template "nginx.name" . }}-fsfreeze
        pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/var/log/nginx"]'
        post.hook.backup.velero.io/container: {{ template "nginx.name" . }}-fsfreeze
        post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/var/log/nginx"]'
        {{- end }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ template "nginx.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          name: {{ template "nginx.name" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: wwwdata-volume
            {{- if .Values.persistence.enabled }}
            - mountPath: /var/log/nginx
              name: nginx-logs
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if and .Values.fsfreeze.image .Values.persistence.enabled }}
        - image: "{{ .Values.fsfreeze.image.repository }}:{{ .Values.fsfreeze.image.tag }}"
          name: {{ template "nginx.name" . }}-fsfreeze
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: "/var/log/nginx"
              name: nginx-logs
              readOnly: false
        {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      volumes:
        - name: wwwdata-volume
          configMap:
            name: {{ template "nginx.fullname" . }}
        {{- if .Values.persistence.enabled }}
        - name: nginx-logs
          persistentVolumeClaim:
            claimName: {{ template "nginx.fullname" . }}
        {{- end }}
